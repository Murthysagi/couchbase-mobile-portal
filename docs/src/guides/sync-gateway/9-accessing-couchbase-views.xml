<?xml version="1.0" encoding="UTF-8"?>
<guide xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../docs.xsd" id="accessing-cb-views">
    <title>Accessing Couchbase Server views via Sync Gateway</title>
    <description>A guide to accessing views on Couchbase Server via Sync Gateway.</description>
    <introduction>
        <paragraph>Sync Gateway has a feature that allows clients to directly query Couchbase Views via the Sync Gateway REST API.</paragraph>
    </introduction>
    <articles>
        <article id="enable-view-queries-via-the-public-rest-api">
            <title>Sync Gateway 1.2.x enabling View queries via the Public REST API</title>
            <description>In Sync Gateway 1.2 querying Views via the Public REST API is disabled by default, this article discusses the default view behaviour in 1.2.x and how to enable View queries via the Public REST API.</description>
            <introduction>
                <paragraph>After reading this article you will understand the implications and process to enable View queries on the Public REST API.</paragraph>
            </introduction>
            <topics>
                <topic id="default-behaviour">
                    <title>Default View query behaviour</title>
                    <body>
                        <paragraph>In Sync Gateway 1.2.x views may be created and queried via the Admin REST API using the default configuration. However with the default configuration querying a view via the Public REST API:</paragraph>
                        <code-block>
                            curl --cookie "SyncGatewaySession=bb56f6b5101e4b6b7f7f301c1e1db67595e2bfb8" localhost:4984/todolite/_design/all_lists/_view/all_lists
                        </code-block>
                        <paragraph>Will return a 403 Forbidden status:</paragraph>
                        <code-block>
                            HTTP/1.1 403 Forbidden
                            Content-Type: application/json
                            Server: Couchbase Sync Gateway/1.2
                            Date: Thu, 03 Mar 2016 17:02:32 GMT
                            Content-Length: 42

                            {"error":"Forbidden","reason":"forbidden"}
                        </code-block>
                    </body>
                </topic>
                <topic id="understanding-the-default-behaviour">
                    <title>Understanding the default View query behaviour</title>
                    <body>
                        <paragraph>View query support via the Public REST API is not backward-compatible with views created prior to SG 1.2. </paragraph>
                        <paragraph>To access pre-existing views via the Public REST API, the views must be deleted and re-created after enabling Public REST API View queries (see below).</paragraph>
                        <paragraph>Sync Gateway View Queries are backed by Couchbase Server Views, when a query is executed it passes the 'stale=false' flag to the Couchbase Server view, this forces the view to re-index any new document revisions before returning the query results.</paragraph><paragraph>The re-indexing can become a significant overhead when View queries are run by large numbers of users over the Public REST API. Until those concerns are addressed, the Public REST API View query support is disabled by default, and treated as an unsupported feature.</paragraph>
                    </body>
                </topic>
                <topic id="enable-view-queries">
                    <title>Enable public view queries</title>
                    <body>
                        <paragraph>For each database that you want to enable View Queries over the Public REST API, add an 'unsupported" property and enable 'user_views".</paragraph>
                        <code-block>
                            {
                                "interface":":4984",        // Begin server configuration
                                "adminInterface":":4985",
                                "log":["REST"],
                                "databases":{               // Begin database configuration
                                    "sync_gateway":{
                                        "unsupported": {    // Enable View queries via the Public REST API
                                            "user_views": {
                                                "enabled":true
                                            }
                                        },
                                        "server":"http://localhost:8091",
                                        "bucket":"sync_gateway",
                                        "sync":`function(doc) {channel(doc.channels);}`
                                    }
                                }
                            }
                            
                        </code-block>
                        <paragraph>Before starting Sync Gateway with the updated configuration, for each database you have enabled 'user_views', delete all custom views using the Couchbase Server Web Admin Console.</paragraph>
                        <paragraph>Start Sync Gateway, then re-create the custom Views via the Admin REST API, the new Views can be queried via the Public REST API. Users will only be returned rows from the query which were emitted from documents that are tagged with channels the user has been assigned access.</paragraph>
                    </body>
                </topic>
            </topics>
        </article>
        <article id="creating-and-using-a-view">
            <title>Creating and querying a View</title>
            <description>This article walks you through on how to define a view using the TodoLite sample app.  There are a few special considerations when defining a view against a bucket used by Sync Gateway.</description>
            <introduction>
                <paragraph>After walking through these steps, you will have a Couchbase View defined and have issued queries against it on both the Admin (4985) and User (4984) ports.</paragraph>
            </introduction>
            <topics>
	        <topic id="setup-todolite">
		  <title>Setup TodoLite sample</title>
		  <body>
		    <paragraph>
		      The rest of the tutorial will assume that you have done the following steps:
		    </paragraph>
		    <unordered-list>
		       <list-item>
			  <paragraph>Installed <external-ref href="https://github.com/couchbaselabs/ToDoLite-Android">TodoLite Android</external-ref> or <external-ref href="https://github.com/couchbaselabs/TodoLite-iOS">TodoLite iOS</external-ref></paragraph>
		       </list-item>
		       <list-item>
			  <paragraph>
			    Created a Couchbase Server bucket called todolite, and used a Sync Gateway configuration that contains <external-ref href="https://raw.githubusercontent.com/couchbaselabs/ToDoLite-iOS/5a90d5170629f3d731920feaa8863fc7b7ddeb5b/sync-gateway-config.json">this example</external-ref>
			  </paragraph>
		       </list-item>
		    </unordered-list>
		    <paragraph>
		      Alternatively, instead of setting up TodoLite, you can adapt the rest of the article to your particular data model.
		    </paragraph>
		  </body>
		</topic>
                <topic id="create-view">
                    <title>Create an empty development view</title>
                    <body>
			<paragraph>
			  <strong>All views accessed via the Sync Gateway REST API must be created via the REST API rather than directly in the Couchbase Web UI, otherwise the queries will not work.</strong>
			</paragraph>
			<paragraph>
			  ssh into that has access to the Sync Gateway Admin port, and copy and paste the following into a file called testview
			</paragraph>
			<code-block language="javascript"><![CDATA[
{
  "views":{
    "all_lists":{
      "map":"function (doc, meta) { if (doc.type != \"list\") { return; } emit(doc.title, doc.owner); }"
    }
  }
}
                   ]]></code-block>
			<paragraph>
			  Store this in Sync Gateway via following curl request:
			</paragraph>
			<code-block language="javascript"><![CDATA[
curl -X PUT -H "Content-type: application/json" localhost:4985/todolite/_design/all_lists --data @testview 
                   ]]></code-block>
			<paragraph>
			  You should receive a response like:
			</paragraph>
			<code-block language="javascript"><![CDATA[
{"id":"all_lists","ok":true,"rev":"1-792dc3d88106756208b28a29ab3825f6"}
                   ]]></code-block>

                    </body>
                </topic>
                <topic id="access-view-via-admin-port">
                    <title>Testing the view via the Admin port</title>
                    <body>
		        <paragraph>
			  Now we will access the Couchbase View created in the previous article via the Sync Gateway admin port (4985).  The Admin port is easier to test on, because there are no access control restrictions or user auth to worry about.
			</paragraph>
			<unordered-list>
			   <list-item>
			      <paragraph>ssh into your sync gateway machine</paragraph>
			   </list-item>
			   <list-item>
			      <paragraph>Query the view via curl: <code-block><![CDATA[
curl localhost:4985/todolite/_design/all_lists/_view/all_lists
                    ]]></code-block>
			      </paragraph>
			   </list-item>
			   <list-item>
			      <paragraph>
				You should receive a response like:
			      </paragraph>
			      <code-block language="javascript"><![CDATA[
{
    "total_rows":1,
    "rows":[
        {
            "id":"57b82878-a7dc-478a-80c1-e2700f8f5a11",
            "key":"Food",
            "value":"profile:778915335487383"
        }
    ]
}
			 ]]></code-block>

			   </list-item>

			</unordered-list>
                    </body>
                </topic>
                <topic id="access-view-via-non-admin-port">
                    <title>Testing the view via the User port</title>
                    <body>
		        <paragraph>
			  Views are also available via the User port (4984), and will automatically filter the returned data to the subset of the data which the user has access to.
			</paragraph>
			<unordered-list>
			   <list-item>
			      <paragraph>
				Find out your user id <code-block>curl localhost:4985/todolite/_user/</code-block> and look for your facebook ID.  If you don't know your facebook ID, you can login to  <external-ref href="developer.facebook.com">developer.facebook.com</external-ref> to find it.
			      </paragraph>
			      <paragraph>
				Create a new session token via <code-block>curl -X POST -H "Content-type: application/json" -d '{"name": "your-user-id"}' localhost:4985/todolite/_session</code-block>
			      </paragraph>
			      <paragraph>
				The response will look like this: <code-block>{"session_id":"03bdd7f1be83f035a7298924f9a28270feac7f4c","expires":"2015-03-17T21:39:16.076186179Z","cookie_name":"SyncGatewaySession"}</code-block>
			      </paragraph>
			      <paragraph>
				Query the view on port 4984 via <code-block>curl --cookie "SyncGatewaySession=03bdd7f1be83f035a7298924f9a28270feac7f4c" localhost:4984/todolite/_design/all_lists/_view/all_lists</code-block>
			      </paragraph>
			      <paragraph>
				You should receive a response like:
			      </paragraph>
			      <code-block language="javascript"><![CDATA[
{
    "total_rows":1,
    "rows":[
        {
            "id":"57b82878-a7dc-478a-80c1-e2700f8f5a11",
            "key":"ShoppingList",
            "value":"profile:778915335487383"
        }
    ]
}
			 ]]></code-block>
			   </list-item>
			</unordered-list>
                    </body>
                </topic>

            </topics>
        </article>
    </articles>
</guide>
